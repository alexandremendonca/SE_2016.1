git init //Criar um repositório no diretório atual.
git init --bare //Criar um repositório no diretório atual que seja disponível para outras estações na rede local.
git status //Verificar status do repositório, checando se temos arquivos para adicionar a staging area ou comitar.
git add <file name> //Adicionar arquivo específico para staging area.
git add . //Adicionar todos os arquivos para staging area.
git add *.<extension> //Adicionar todos os arquivos de determinada extensão para stating area.
git commit -m "<message>" //Commitar arquivos presentes na staging area.
git commit -a -m "<message>" //Comitar arquivos sem que tenham sido previamente adicionados na staging area.
git diff //Comparar conteúdo de arquivos modificados que ainda não foram adicionados a staging area.
git diff --staged //Comparar conteúdo de arquivos modificados presentes na area.
git log //Visualizar histórico de todos os commits.
git log -p //Visualizar histórico de todos os commits com seus diff. Pressionar ENTER para paginar e Q quando terminar para voltar ao prompt.
git log -p -<n>//Visualizar histórico dos últimos n commits com seus diff.
git log --pretty=oneline//Visualizar código e mensagem de todos os commits.
gitk //Abrir visualizador de relatórios de alterações do GIT.
git commit --amend -m "<message>" //Atualizar último commit modificando a chave sem criar um novo commit.
git reset HEAD <file name> //Remover arquivo específico da staging area.
git checkout --<file name> //Remover últimas modificações do conteúdo do arquivo que não estejam presentes na staging area.
git rm <file name> //Remover arquivo específico do diretório de trabalho.
git tag -a <tag name> -m "<message>" //Criar uma tag. Atributo a cria tag anotada (usuário que criou e data/hora de criação).
git tag //Apresenta a tag atual.
git tag -a <tag name> <chave completa de um commit antigo> -m "<message>" //Criar uma tag baseada num commit antigo.
git tag -d <tag name> //Deletar tag.
git show <tag name> //Apresenta detalhes da tag.
git checkout <tag name> //Retorna ambiente de trabalho para momento da tag informada.
git branch //Apresenta todos os branches indicado o ativo no momento.
git branch <branch name> //Cria um novo branch.
git branch -d <branch name> //Deletar branch.
git checkout <branch name> //Retorna ambiente de trabalho para branch informado.
git checkout -b <branch name> //Cria branch e já seta ambiente de trabalho para este branch recém criado.
git merge <branch origin name> //Atualizar para o branch atual os ajustes realizados no branch de origem.
git clone file:////<server name>/<share name>/<project name> <git share name> //Clonar projeto substituindo nome do compartilhamento para viabilizar o início do trabalho compartilhado.
git remote //Apresenta nome do servidor remoto.
git push <remote> master //Enviar arquivos para servidor remoto a partir do master.
git pull <remote> master //Trazer arquivos do servidor remoto para master fazendo merge automático.
git fetch <remote> <branch> //Trazer arquivos do servidor remoto para branch fazendo merge manual.
ssh-keygen //Gerar chave SSH para conectar GIT com GITHUB.